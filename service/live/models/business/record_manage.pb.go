// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: live/business/record_manage.proto

package business

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RecordTaskFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vid       string `protobuf:"bytes,1,opt,name=Vid,proto3" json:"Vid,omitempty"`
	Vhost     string `protobuf:"bytes,2,opt,name=Vhost,proto3" json:"Vhost,omitempty"`         // 域名空间名称。由 1 到 60 位数字、字母、下划线及"-"和"."组成
	App       string `protobuf:"bytes,3,opt,name=App,proto3" json:"App,omitempty"`             // 应用名称
	Stream    string `protobuf:"bytes,4,opt,name=Stream,proto3" json:"Stream,omitempty"`       // 流名称
	Bucket    string `protobuf:"bytes,5,opt,name=Bucket,proto3" json:"Bucket,omitempty"`       // 对象存储 bucket 名称
	Path      string `protobuf:"bytes,6,opt,name=Path,proto3" json:"Path,omitempty"`           // ToS 中的保存路径
	Duration  string `protobuf:"bytes,7,opt,name=Duration,proto3" json:"Duration,omitempty"`   //录制时长
	StartTime string `protobuf:"bytes,8,opt,name=StartTime,proto3" json:"StartTime,omitempty"` // 开始推流时间
	Format    string `protobuf:"bytes,9,opt,name=Format,proto3" json:"Format,omitempty"`       // 录制文件存储格式
	EndTime   string `protobuf:"bytes,10,opt,name=EndTime,proto3" json:"EndTime,omitempty"`    // 结束推流时间
	FileName  string `protobuf:"bytes,11,opt,name=FileName,proto3" json:"FileName,omitempty"`  // 录制文件的文件名
}

func (x *RecordTaskFile) Reset() {
	*x = RecordTaskFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_live_business_record_manage_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordTaskFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordTaskFile) ProtoMessage() {}

func (x *RecordTaskFile) ProtoReflect() protoreflect.Message {
	mi := &file_live_business_record_manage_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordTaskFile.ProtoReflect.Descriptor instead.
func (*RecordTaskFile) Descriptor() ([]byte, []int) {
	return file_live_business_record_manage_proto_rawDescGZIP(), []int{0}
}

func (x *RecordTaskFile) GetVid() string {
	if x != nil {
		return x.Vid
	}
	return ""
}

func (x *RecordTaskFile) GetVhost() string {
	if x != nil {
		return x.Vhost
	}
	return ""
}

func (x *RecordTaskFile) GetApp() string {
	if x != nil {
		return x.App
	}
	return ""
}

func (x *RecordTaskFile) GetStream() string {
	if x != nil {
		return x.Stream
	}
	return ""
}

func (x *RecordTaskFile) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *RecordTaskFile) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *RecordTaskFile) GetDuration() string {
	if x != nil {
		return x.Duration
	}
	return ""
}

func (x *RecordTaskFile) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *RecordTaskFile) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *RecordTaskFile) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *RecordTaskFile) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

type RecordHistoryInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data       []*RecordTaskFile `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`             // 截图历史列表记录
	Pagination *Pagination       `protobuf:"bytes,2,opt,name=Pagination,proto3" json:"Pagination,omitempty"` // 分页信息
}

func (x *RecordHistoryInfo) Reset() {
	*x = RecordHistoryInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_live_business_record_manage_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordHistoryInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordHistoryInfo) ProtoMessage() {}

func (x *RecordHistoryInfo) ProtoReflect() protoreflect.Message {
	mi := &file_live_business_record_manage_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordHistoryInfo.ProtoReflect.Descriptor instead.
func (*RecordHistoryInfo) Descriptor() ([]byte, []int) {
	return file_live_business_record_manage_proto_rawDescGZIP(), []int{1}
}

func (x *RecordHistoryInfo) GetData() []*RecordTaskFile {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *RecordHistoryInfo) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

var File_live_business_record_manage_proto protoreflect.FileDescriptor

var file_live_business_record_manage_proto_rawDesc = []byte{
	0x0a, 0x21, 0x6c, 0x69, 0x76, 0x65, 0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2f,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x1f, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x4c, 0x69, 0x76, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x1a, 0x23, 0x6c, 0x69, 0x76, 0x65, 0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x2f, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x96, 0x02, 0x0a, 0x0e, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x56, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x56, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x56, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x56,
	0x68, 0x6f, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x41, 0x70, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x41, 0x70, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x16,
	0x0a, 0x06, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x74, 0x68, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x44, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x45,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0xa5, 0x01, 0x0a, 0x11, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x43, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x69, 0x76, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x54,
	0x61, 0x73, 0x6b, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x4b, 0x0a,
	0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2b, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4c,
	0x69, 0x76, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0xd4, 0x01, 0x0a, 0x2a, 0x63,
	0x6f, 0x6d, 0x2e, 0x76, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6c, 0x69, 0x76, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x42, 0x0c, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x50, 0x01, 0x5a, 0x42, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x76, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x2f, 0x76, 0x6f, 0x6c, 0x63, 0x2d, 0x73, 0x64, 0x6b, 0x2d, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67,
	0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x6c, 0x69, 0x76, 0x65, 0x2f, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0xa0, 0x01, 0x01,
	0xd8, 0x01, 0x01, 0xc2, 0x02, 0x00, 0xca, 0x02, 0x21, 0x56, 0x6f, 0x6c, 0x63, 0x5c, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x5c, 0x4c, 0x69, 0x76, 0x65, 0x5c, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x5c, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0xe2, 0x02, 0x24, 0x56, 0x6f, 0x6c,
	0x63, 0x5c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5c, 0x4c, 0x69, 0x76, 0x65, 0x5c, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_live_business_record_manage_proto_rawDescOnce sync.Once
	file_live_business_record_manage_proto_rawDescData = file_live_business_record_manage_proto_rawDesc
)

func file_live_business_record_manage_proto_rawDescGZIP() []byte {
	file_live_business_record_manage_proto_rawDescOnce.Do(func() {
		file_live_business_record_manage_proto_rawDescData = protoimpl.X.CompressGZIP(file_live_business_record_manage_proto_rawDescData)
	})
	return file_live_business_record_manage_proto_rawDescData
}

var file_live_business_record_manage_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_live_business_record_manage_proto_goTypes = []interface{}{
	(*RecordTaskFile)(nil),    // 0: Volcengine.Live.Models.Business.RecordTaskFile
	(*RecordHistoryInfo)(nil), // 1: Volcengine.Live.Models.Business.RecordHistoryInfo
	(*Pagination)(nil),        // 2: Volcengine.Live.Models.Business.Pagination
}
var file_live_business_record_manage_proto_depIdxs = []int32{
	0, // 0: Volcengine.Live.Models.Business.RecordHistoryInfo.Data:type_name -> Volcengine.Live.Models.Business.RecordTaskFile
	2, // 1: Volcengine.Live.Models.Business.RecordHistoryInfo.Pagination:type_name -> Volcengine.Live.Models.Business.Pagination
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_live_business_record_manage_proto_init() }
func file_live_business_record_manage_proto_init() {
	if File_live_business_record_manage_proto != nil {
		return
	}
	file_live_business_snapshot_manage_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_live_business_record_manage_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordTaskFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_live_business_record_manage_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordHistoryInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_live_business_record_manage_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_live_business_record_manage_proto_goTypes,
		DependencyIndexes: file_live_business_record_manage_proto_depIdxs,
		MessageInfos:      file_live_business_record_manage_proto_msgTypes,
	}.Build()
	File_live_business_record_manage_proto = out.File
	file_live_business_record_manage_proto_rawDesc = nil
	file_live_business_record_manage_proto_goTypes = nil
	file_live_business_record_manage_proto_depIdxs = nil
}
