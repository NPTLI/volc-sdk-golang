// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: live/business/VQScore.proto

package business

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VQScoreID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"` //测试任务ID。
}

func (x *VQScoreID) Reset() {
	*x = VQScoreID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_live_business_VQScore_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VQScoreID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VQScoreID) ProtoMessage() {}

func (x *VQScoreID) ProtoReflect() protoreflect.Message {
	mi := &file_live_business_VQScore_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VQScoreID.ProtoReflect.Descriptor instead.
func (*VQScoreID) Descriptor() ([]byte, []int) {
	return file_live_business_VQScore_proto_rawDescGZIP(), []int{0}
}

func (x *VQScoreID) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type ScoreInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PointTime string  `protobuf:"bytes,1,opt,name=PointTime,proto3" json:"PointTime,omitempty"` //测评取值时间点
	Score     float32 `protobuf:"fixed32,2,opt,name=Score,proto3" json:"Score,omitempty"`       //测评得分
}

func (x *ScoreInfo) Reset() {
	*x = ScoreInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_live_business_VQScore_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScoreInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScoreInfo) ProtoMessage() {}

func (x *ScoreInfo) ProtoReflect() protoreflect.Message {
	mi := &file_live_business_VQScore_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScoreInfo.ProtoReflect.Descriptor instead.
func (*ScoreInfo) Descriptor() ([]byte, []int) {
	return file_live_business_VQScore_proto_rawDescGZIP(), []int{1}
}

func (x *ScoreInfo) GetPointTime() string {
	if x != nil {
		return x.PointTime
	}
	return ""
}

func (x *ScoreInfo) GetScore() float32 {
	if x != nil {
		return x.Score
	}
	return 0
}

type AddrScoreInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddrType      int64        `protobuf:"varint,1,opt,name=AddrType,proto3" json:"AddrType,omitempty"`          //拉流地址类型，1：主拉流地址，2：对比拉流地址
	ScoreInfoList []*ScoreInfo `protobuf:"bytes,2,rep,name=ScoreInfoList,proto3" json:"ScoreInfoList,omitempty"` // 测评得分列表。
}

func (x *AddrScoreInfo) Reset() {
	*x = AddrScoreInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_live_business_VQScore_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddrScoreInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddrScoreInfo) ProtoMessage() {}

func (x *AddrScoreInfo) ProtoReflect() protoreflect.Message {
	mi := &file_live_business_VQScore_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddrScoreInfo.ProtoReflect.Descriptor instead.
func (*AddrScoreInfo) Descriptor() ([]byte, []int) {
	return file_live_business_VQScore_proto_rawDescGZIP(), []int{2}
}

func (x *AddrScoreInfo) GetAddrType() int64 {
	if x != nil {
		return x.AddrType
	}
	return 0
}

func (x *AddrScoreInfo) GetScoreInfoList() []*ScoreInfo {
	if x != nil {
		return x.ScoreInfoList
	}
	return nil
}

type VQScoreInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MainAddr             string           `protobuf:"bytes,1,opt,name=MainAddr,proto3" json:"MainAddr,omitempty"`                           //主拉流地址
	ContrastAddr         string           `protobuf:"bytes,2,opt,name=ContrastAddr,proto3" json:"ContrastAddr,omitempty"`                   //对比拉流地址
	Duration             int64            `protobuf:"varint,3,opt,name=Duration,proto3" json:"Duration,omitempty"`                          //测评运行时间
	TotalPointNum        int64            `protobuf:"varint,4,opt,name=TotalPointNum,proto3" json:"TotalPointNum,omitempty"`                //计算取值点数
	MainAverageScore     float32          `protobuf:"fixed32,5,opt,name=MainAverageScore,proto3" json:"MainAverageScore,omitempty"`         //计算主拉流地址平均得分
	ContrastAverageScore float32          `protobuf:"fixed32,6,opt,name=ContrastAverageScore,proto3" json:"ContrastAverageScore,omitempty"` //计算对比拉流地址的画质平均得分
	Difference           float32          `protobuf:"fixed32,7,opt,name=Difference,proto3" json:"Difference,omitempty"`                     //主评分与对比评分的差值，最大-最小
	DifferencePer        float32          `protobuf:"fixed32,8,opt,name=DifferencePer,proto3" json:"DifferencePer,omitempty"`               //主评分与对比评分的差值百分比，(最大-最小)/最小
	AddrScoreList        []*AddrScoreInfo `protobuf:"bytes,9,rep,name=AddrScoreList,proto3" json:"AddrScoreList,omitempty"`                 //拉流地址测评得分详细信息
}

func (x *VQScoreInfo) Reset() {
	*x = VQScoreInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_live_business_VQScore_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VQScoreInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VQScoreInfo) ProtoMessage() {}

func (x *VQScoreInfo) ProtoReflect() protoreflect.Message {
	mi := &file_live_business_VQScore_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VQScoreInfo.ProtoReflect.Descriptor instead.
func (*VQScoreInfo) Descriptor() ([]byte, []int) {
	return file_live_business_VQScore_proto_rawDescGZIP(), []int{3}
}

func (x *VQScoreInfo) GetMainAddr() string {
	if x != nil {
		return x.MainAddr
	}
	return ""
}

func (x *VQScoreInfo) GetContrastAddr() string {
	if x != nil {
		return x.ContrastAddr
	}
	return ""
}

func (x *VQScoreInfo) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *VQScoreInfo) GetTotalPointNum() int64 {
	if x != nil {
		return x.TotalPointNum
	}
	return 0
}

func (x *VQScoreInfo) GetMainAverageScore() float32 {
	if x != nil {
		return x.MainAverageScore
	}
	return 0
}

func (x *VQScoreInfo) GetContrastAverageScore() float32 {
	if x != nil {
		return x.ContrastAverageScore
	}
	return 0
}

func (x *VQScoreInfo) GetDifference() float32 {
	if x != nil {
		return x.Difference
	}
	return 0
}

func (x *VQScoreInfo) GetDifferencePer() float32 {
	if x != nil {
		return x.DifferencePer
	}
	return 0
}

func (x *VQScoreInfo) GetAddrScoreList() []*AddrScoreInfo {
	if x != nil {
		return x.AddrScoreList
	}
	return nil
}

type VQScoreTaskInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID        string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`               //测评任务ID
	Duration  int64  `protobuf:"varint,2,opt,name=Duration,proto3" json:"Duration,omitempty"`  //测评运行时间
	Status    int64  `protobuf:"varint,3,opt,name=Status,proto3" json:"Status,omitempty"`      //测评状态，1：测试中，2：成功，3：失败
	AccountID string `protobuf:"bytes,4,opt,name=AccountID,proto3" json:"AccountID,omitempty"` //账号
}

func (x *VQScoreTaskInfo) Reset() {
	*x = VQScoreTaskInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_live_business_VQScore_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VQScoreTaskInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VQScoreTaskInfo) ProtoMessage() {}

func (x *VQScoreTaskInfo) ProtoReflect() protoreflect.Message {
	mi := &file_live_business_VQScore_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VQScoreTaskInfo.ProtoReflect.Descriptor instead.
func (*VQScoreTaskInfo) Descriptor() ([]byte, []int) {
	return file_live_business_VQScore_proto_rawDescGZIP(), []int{4}
}

func (x *VQScoreTaskInfo) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *VQScoreTaskInfo) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *VQScoreTaskInfo) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *VQScoreTaskInfo) GetAccountID() string {
	if x != nil {
		return x.AccountID
	}
	return ""
}

type VQScoreTaskListInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime string             `protobuf:"bytes,2,opt,name=StartTime,proto3" json:"StartTime,omitempty"` //查询开始时间，UTC时间格式
	EndTime   string             `protobuf:"bytes,3,opt,name=EndTime,proto3" json:"EndTime,omitempty"`     //查询结束时间，UTC时间格式
	Total     int64              `protobuf:"varint,4,opt,name=Total,proto3" json:"Total,omitempty"`        //条目总数
	TaskList  []*VQScoreTaskInfo `protobuf:"bytes,5,rep,name=TaskList,proto3" json:"TaskList,omitempty"`   //测评任务列表明细
}

func (x *VQScoreTaskListInfo) Reset() {
	*x = VQScoreTaskListInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_live_business_VQScore_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VQScoreTaskListInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VQScoreTaskListInfo) ProtoMessage() {}

func (x *VQScoreTaskListInfo) ProtoReflect() protoreflect.Message {
	mi := &file_live_business_VQScore_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VQScoreTaskListInfo.ProtoReflect.Descriptor instead.
func (*VQScoreTaskListInfo) Descriptor() ([]byte, []int) {
	return file_live_business_VQScore_proto_rawDescGZIP(), []int{5}
}

func (x *VQScoreTaskListInfo) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *VQScoreTaskListInfo) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *VQScoreTaskListInfo) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *VQScoreTaskListInfo) GetTaskList() []*VQScoreTaskInfo {
	if x != nil {
		return x.TaskList
	}
	return nil
}

var File_live_business_VQScore_proto protoreflect.FileDescriptor

var file_live_business_VQScore_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x6c, 0x69, 0x76, 0x65, 0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2f,
	0x56, 0x51, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1f, 0x56,
	0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x69, 0x76, 0x65, 0x2e, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x22, 0x1b,
	0x0a, 0x09, 0x56, 0x51, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x3f, 0x0a, 0x09, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x7d, 0x0a, 0x0d,
	0x41, 0x64, 0x64, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a,
	0x08, 0x41, 0x64, 0x64, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x41, 0x64, 0x64, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x50, 0x0a, 0x0d, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2a, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x69,
	0x76, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x8b, 0x03, 0x0a, 0x0b,
	0x56, 0x51, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x4d,
	0x61, 0x69, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4d,
	0x61, 0x69, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x73, 0x74, 0x41, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x73, 0x74, 0x41, 0x64, 0x64, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x12, 0x2a, 0x0a,
	0x10, 0x4d, 0x61, 0x69, 0x6e, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x10, 0x4d, 0x61, 0x69, 0x6e, 0x41, 0x76, 0x65,
	0x72, 0x61, 0x67, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x32, 0x0a, 0x14, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x73, 0x74, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x14, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x73,
	0x74, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x44, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x0a, 0x44, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x24, 0x0a,
	0x0d, 0x44, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x50, 0x65, 0x72, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x44, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x50, 0x65, 0x72, 0x12, 0x54, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x72, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x56, 0x6f, 0x6c,
	0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x69, 0x76, 0x65, 0x2e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x41, 0x64, 0x64,
	0x72, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x41, 0x64, 0x64, 0x72,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x73, 0x0a, 0x0f, 0x56, 0x51, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x22, 0xb1,
	0x01, 0x0a, 0x13, 0x56, 0x51, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69,
	0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x12, 0x4c, 0x0a, 0x08, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x69, 0x76, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x51, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69,
	0x73, 0x74, 0x42, 0xcf, 0x01, 0x0a, 0x2a, 0x63, 0x6f, 0x6d, 0x2e, 0x76, 0x6f, 0x6c, 0x63, 0x65,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6c, 0x69,
	0x76, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x42, 0x07, 0x56, 0x51, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x50, 0x01, 0x5a, 0x42, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x76, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x2f, 0x76, 0x6f, 0x6c, 0x63, 0x2d, 0x73, 0x64, 0x6b, 0x2d, 0x67, 0x6f, 0x6c,
	0x61, 0x6e, 0x67, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x6c, 0x69, 0x76, 0x65,
	0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0xa0, 0x01, 0x01, 0xd8, 0x01, 0x01, 0xc2, 0x02, 0x00, 0xca, 0x02, 0x21, 0x56, 0x6f, 0x6c, 0x63,
	0x5c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5c, 0x4c, 0x69, 0x76, 0x65, 0x5c, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x5c, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0xe2, 0x02, 0x24,
	0x56, 0x6f, 0x6c, 0x63, 0x5c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5c, 0x4c, 0x69, 0x76,
	0x65, 0x5c, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_live_business_VQScore_proto_rawDescOnce sync.Once
	file_live_business_VQScore_proto_rawDescData = file_live_business_VQScore_proto_rawDesc
)

func file_live_business_VQScore_proto_rawDescGZIP() []byte {
	file_live_business_VQScore_proto_rawDescOnce.Do(func() {
		file_live_business_VQScore_proto_rawDescData = protoimpl.X.CompressGZIP(file_live_business_VQScore_proto_rawDescData)
	})
	return file_live_business_VQScore_proto_rawDescData
}

var file_live_business_VQScore_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_live_business_VQScore_proto_goTypes = []interface{}{
	(*VQScoreID)(nil),           // 0: Volcengine.Live.Models.Business.VQScoreID
	(*ScoreInfo)(nil),           // 1: Volcengine.Live.Models.Business.ScoreInfo
	(*AddrScoreInfo)(nil),       // 2: Volcengine.Live.Models.Business.AddrScoreInfo
	(*VQScoreInfo)(nil),         // 3: Volcengine.Live.Models.Business.VQScoreInfo
	(*VQScoreTaskInfo)(nil),     // 4: Volcengine.Live.Models.Business.VQScoreTaskInfo
	(*VQScoreTaskListInfo)(nil), // 5: Volcengine.Live.Models.Business.VQScoreTaskListInfo
}
var file_live_business_VQScore_proto_depIdxs = []int32{
	1, // 0: Volcengine.Live.Models.Business.AddrScoreInfo.ScoreInfoList:type_name -> Volcengine.Live.Models.Business.ScoreInfo
	2, // 1: Volcengine.Live.Models.Business.VQScoreInfo.AddrScoreList:type_name -> Volcengine.Live.Models.Business.AddrScoreInfo
	4, // 2: Volcengine.Live.Models.Business.VQScoreTaskListInfo.TaskList:type_name -> Volcengine.Live.Models.Business.VQScoreTaskInfo
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_live_business_VQScore_proto_init() }
func file_live_business_VQScore_proto_init() {
	if File_live_business_VQScore_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_live_business_VQScore_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VQScoreID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_live_business_VQScore_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScoreInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_live_business_VQScore_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddrScoreInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_live_business_VQScore_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VQScoreInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_live_business_VQScore_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VQScoreTaskInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_live_business_VQScore_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VQScoreTaskListInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_live_business_VQScore_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_live_business_VQScore_proto_goTypes,
		DependencyIndexes: file_live_business_VQScore_proto_depIdxs,
		MessageInfos:      file_live_business_VQScore_proto_msgTypes,
	}.Build()
	File_live_business_VQScore_proto = out.File
	file_live_business_VQScore_proto_rawDesc = nil
	file_live_business_VQScore_proto_goTypes = nil
	file_live_business_VQScore_proto_depIdxs = nil
}
