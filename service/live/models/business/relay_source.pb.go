// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: live/business/relay_source.proto

package business

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RelaySourceGroupItemV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 回源地址数组
	RelaySourceDomainList []string `protobuf:"bytes,1,rep,name=RelaySourceDomainList,proto3" json:"RelaySourceDomainList,omitempty"`
	// 回源参数。
	RelaySourceParams map[string]string `protobuf:"bytes,2,rep,name=RelaySourceParams,proto3" json:"RelaySourceParams,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// 回源协议，目前只支持以下两种：<li>rmtp <li>flv。
	RelaySourceProtocol string `protobuf:"bytes,3,opt,name=RelaySourceProtocol,proto3" json:"RelaySourceProtocol,omitempty"`
}

func (x *RelaySourceGroupItemV2) Reset() {
	*x = RelaySourceGroupItemV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_live_business_relay_source_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelaySourceGroupItemV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelaySourceGroupItemV2) ProtoMessage() {}

func (x *RelaySourceGroupItemV2) ProtoReflect() protoreflect.Message {
	mi := &file_live_business_relay_source_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelaySourceGroupItemV2.ProtoReflect.Descriptor instead.
func (*RelaySourceGroupItemV2) Descriptor() ([]byte, []int) {
	return file_live_business_relay_source_proto_rawDescGZIP(), []int{0}
}

func (x *RelaySourceGroupItemV2) GetRelaySourceDomainList() []string {
	if x != nil {
		return x.RelaySourceDomainList
	}
	return nil
}

func (x *RelaySourceGroupItemV2) GetRelaySourceParams() map[string]string {
	if x != nil {
		return x.RelaySourceParams
	}
	return nil
}

func (x *RelaySourceGroupItemV2) GetRelaySourceProtocol() string {
	if x != nil {
		return x.RelaySourceProtocol
	}
	return ""
}

type RelaySourceConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vhost     string                    `protobuf:"bytes,1,opt,name=Vhost,proto3" json:"Vhost,omitempty"`         // 对应的 Vhost。
	App       string                    `protobuf:"bytes,2,opt,name=App,proto3" json:"App,omitempty"`             // 应用名称。
	GroupList []*RelaySourceGroupItemV2 `protobuf:"bytes,3,rep,name=GroupList,proto3" json:"GroupList,omitempty"` // 分组列表
}

func (x *RelaySourceConfig) Reset() {
	*x = RelaySourceConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_live_business_relay_source_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelaySourceConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelaySourceConfig) ProtoMessage() {}

func (x *RelaySourceConfig) ProtoReflect() protoreflect.Message {
	mi := &file_live_business_relay_source_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelaySourceConfig.ProtoReflect.Descriptor instead.
func (*RelaySourceConfig) Descriptor() ([]byte, []int) {
	return file_live_business_relay_source_proto_rawDescGZIP(), []int{1}
}

func (x *RelaySourceConfig) GetVhost() string {
	if x != nil {
		return x.Vhost
	}
	return ""
}

func (x *RelaySourceConfig) GetApp() string {
	if x != nil {
		return x.App
	}
	return ""
}

func (x *RelaySourceConfig) GetGroupList() []*RelaySourceGroupItemV2 {
	if x != nil {
		return x.GroupList
	}
	return nil
}

type RelaySourceConfigList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RelaySourceConfigList []*RelaySourceConfig `protobuf:"bytes,1,rep,name=RelaySourceConfigList,proto3" json:"RelaySourceConfigList,omitempty"` // 配置列表
}

func (x *RelaySourceConfigList) Reset() {
	*x = RelaySourceConfigList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_live_business_relay_source_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelaySourceConfigList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelaySourceConfigList) ProtoMessage() {}

func (x *RelaySourceConfigList) ProtoReflect() protoreflect.Message {
	mi := &file_live_business_relay_source_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelaySourceConfigList.ProtoReflect.Descriptor instead.
func (*RelaySourceConfigList) Descriptor() ([]byte, []int) {
	return file_live_business_relay_source_proto_rawDescGZIP(), []int{2}
}

func (x *RelaySourceConfigList) GetRelaySourceConfigList() []*RelaySourceConfig {
	if x != nil {
		return x.RelaySourceConfigList
	}
	return nil
}

var File_live_business_relay_source_proto protoreflect.FileDescriptor

var file_live_business_relay_source_proto_rawDesc = []byte{
	0x0a, 0x20, 0x6c, 0x69, 0x76, 0x65, 0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2f,
	0x72, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x1f, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4c,
	0x69, 0x76, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x22, 0xc4, 0x02, 0x0a, 0x16, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x56, 0x32, 0x12, 0x34,
	0x0a, 0x15, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x15, 0x52,
	0x65, 0x6c, 0x61, 0x79, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x7c, 0x0a, 0x11, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x4e, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x69, 0x76,
	0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x56, 0x32, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x11, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x12, 0x30, 0x0a, 0x13, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x13, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x1a, 0x44, 0x0a, 0x16, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x92, 0x01, 0x0a, 0x11, 0x52,
	0x65, 0x6c, 0x61, 0x79, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x14, 0x0a, 0x05, 0x56, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x56, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x41, 0x70, 0x70, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x41, 0x70, 0x70, 0x12, 0x55, 0x0a, 0x09, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x56, 0x6f,
	0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x69, 0x76, 0x65, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x52, 0x65,
	0x6c, 0x61, 0x79, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x74,
	0x65, 0x6d, 0x56, 0x32, 0x52, 0x09, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0x81, 0x01, 0x0a, 0x15, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x68, 0x0a, 0x15, 0x52, 0x65, 0x6c,
	0x61, 0x79, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x69, 0x76, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x79,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x15, 0x52, 0x65,
	0x6c, 0x61, 0x79, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4c,
	0x69, 0x73, 0x74, 0x42, 0xd3, 0x01, 0x0a, 0x2a, 0x63, 0x6f, 0x6d, 0x2e, 0x76, 0x6f, 0x6c, 0x63,
	0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6c,
	0x69, 0x76, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x42, 0x0b, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50,
	0x01, 0x5a, 0x42, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x76, 0x6f,
	0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2f, 0x76, 0x6f, 0x6c, 0x63, 0x2d, 0x73, 0x64,
	0x6b, 0x2d, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2f, 0x6c, 0x69, 0x76, 0x65, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x62, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0xa0, 0x01, 0x01, 0xd8, 0x01, 0x01, 0xc2, 0x02, 0x00, 0xca, 0x02,
	0x21, 0x56, 0x6f, 0x6c, 0x63, 0x5c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5c, 0x4c, 0x69,
	0x76, 0x65, 0x5c, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x5c, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0xe2, 0x02, 0x24, 0x56, 0x6f, 0x6c, 0x63, 0x5c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x5c, 0x4c, 0x69, 0x76, 0x65, 0x5c, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x5c, 0x47, 0x50,
	0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_live_business_relay_source_proto_rawDescOnce sync.Once
	file_live_business_relay_source_proto_rawDescData = file_live_business_relay_source_proto_rawDesc
)

func file_live_business_relay_source_proto_rawDescGZIP() []byte {
	file_live_business_relay_source_proto_rawDescOnce.Do(func() {
		file_live_business_relay_source_proto_rawDescData = protoimpl.X.CompressGZIP(file_live_business_relay_source_proto_rawDescData)
	})
	return file_live_business_relay_source_proto_rawDescData
}

var file_live_business_relay_source_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_live_business_relay_source_proto_goTypes = []interface{}{
	(*RelaySourceGroupItemV2)(nil), // 0: Volcengine.Live.Models.Business.RelaySourceGroupItemV2
	(*RelaySourceConfig)(nil),      // 1: Volcengine.Live.Models.Business.RelaySourceConfig
	(*RelaySourceConfigList)(nil),  // 2: Volcengine.Live.Models.Business.RelaySourceConfigList
	nil,                            // 3: Volcengine.Live.Models.Business.RelaySourceGroupItemV2.RelaySourceParamsEntry
}
var file_live_business_relay_source_proto_depIdxs = []int32{
	3, // 0: Volcengine.Live.Models.Business.RelaySourceGroupItemV2.RelaySourceParams:type_name -> Volcengine.Live.Models.Business.RelaySourceGroupItemV2.RelaySourceParamsEntry
	0, // 1: Volcengine.Live.Models.Business.RelaySourceConfig.GroupList:type_name -> Volcengine.Live.Models.Business.RelaySourceGroupItemV2
	1, // 2: Volcengine.Live.Models.Business.RelaySourceConfigList.RelaySourceConfigList:type_name -> Volcengine.Live.Models.Business.RelaySourceConfig
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_live_business_relay_source_proto_init() }
func file_live_business_relay_source_proto_init() {
	if File_live_business_relay_source_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_live_business_relay_source_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelaySourceGroupItemV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_live_business_relay_source_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelaySourceConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_live_business_relay_source_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelaySourceConfigList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_live_business_relay_source_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_live_business_relay_source_proto_goTypes,
		DependencyIndexes: file_live_business_relay_source_proto_depIdxs,
		MessageInfos:      file_live_business_relay_source_proto_msgTypes,
	}.Build()
	File_live_business_relay_source_proto = out.File
	file_live_business_relay_source_proto_rawDesc = nil
	file_live_business_relay_source_proto_goTypes = nil
	file_live_business_relay_source_proto_depIdxs = nil
}
